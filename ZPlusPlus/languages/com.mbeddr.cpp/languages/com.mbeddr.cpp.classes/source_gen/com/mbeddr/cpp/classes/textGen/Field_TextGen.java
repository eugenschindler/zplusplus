package com.mbeddr.cpp.classes.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.textGen.TextGenManager;
import com.mbeddr.core.pointers.behavior.ArrayType_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class Field_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, "type", true), "com.mbeddr.core.pointers.structure.ArrayType")) {
      SNode at = SNodeOperations.cast(SLinkOperations.getTarget(node, "type", true), "com.mbeddr.core.pointers.structure.ArrayType");
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), ArrayType_Behavior.call_bottomType_5728674636025041691(at), this.getSNode());
      this.append(" ");
      this.append(SPropertyOperations.getString(node, "name"));
      for (SNode _at : ListSequence.fromList(SNodeOperations.getDescendants(at, "com.mbeddr.core.pointers.structure.ArrayType", true, new String[]{})).reversedList()) {
        this.append("[");
        if (SLinkOperations.getTarget(_at, "sizeExpr", true) != null) {
          TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(_at, "sizeExpr", true), this.getSNode());
        }
        this.append("];");
        this.appendNewLine();
      }
    } else {
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, "type", true), this.getSNode());
      this.append(" ");
      this.append(SPropertyOperations.getString(node, "name"));
      this.append(";");
      this.appendNewLine();
    }
  }
}
