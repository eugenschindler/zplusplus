package com.mbeddr.cpp.classes.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class TemplateParameter_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_getTemplatizableParent_7069250747273007489(SNode thisNode) {

    // A parameter belongs to template, the parent of template is what we search for, e.g. a Class 

    SNode template = SNodeOperations.getAncestor(thisNode, "com.mbeddr.cpp.classes.structure.Template", false, false);

    if (template == null) {
      return null;
    }

    SNode res = SNodeOperations.getAncestor(template, "com.mbeddr.cpp.classes.structure.ICanDeclareTemplate", false, false);

    return res;

  }

  public static String call_getTemplatizableParentPresentation_7069250747273122527(SNode thisNode) {
    SNode parent = TemplateParameter_Behavior.call_getTemplatizableParent_7069250747273007489(thisNode);

    if (parent == null) {
      return "not defined";
    }

    return BehaviorReflection.invokeVirtual(String.class, parent, "virtual_getPresentation_1213877396640", new Object[]{});

  }
}
