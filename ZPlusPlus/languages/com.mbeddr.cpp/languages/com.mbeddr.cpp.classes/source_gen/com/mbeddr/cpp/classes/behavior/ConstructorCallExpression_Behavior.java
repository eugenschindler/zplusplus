package com.mbeddr.cpp.classes.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class ConstructorCallExpression_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> virtual_findSiblings_2015268598020361833(SNode thisNode, SNode clazz, final String name, boolean internal) {
    return Sequence.fromIterable(Classifier_Behavior.call_publicMembers_8616684942293671639(clazz)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "com.mbeddr.cpp.classes.structure.ConstructorDeclaration");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals(name);
      }
    });
  }

  public static SNode virtual_getClassDeclaration_1022708226504867673(SNode thisNode) {
    return SNodeOperations.getAncestor(SLinkOperations.getTarget(thisNode, "methodOrConstructor", false), "com.mbeddr.cpp.classes.structure.ClassDeclaration", false, false);
  }

  public static boolean virtual_requiresTemplateActuals_8616684942293462854(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, IClassMember_Behavior.call_owningClass_998890089994484960(SLinkOperations.getTarget(thisNode, "methodOrConstructor", false)), "virtual_residesInTemplateContext_998890089994455159", new Object[]{});
  }

  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    return "Constructor call expression for: " + SLinkOperations.getTarget(thisNode, "methodOrConstructor", false);
  }
}
