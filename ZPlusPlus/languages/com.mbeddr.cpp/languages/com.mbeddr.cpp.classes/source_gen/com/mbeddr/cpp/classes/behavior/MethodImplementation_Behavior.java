package com.mbeddr.cpp.classes.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class MethodImplementation_Behavior {
  public static void init(SNode thisNode) {
    SLinkOperations.setNewChild(thisNode, "body", "com.mbeddr.core.statements.structure.StatementList");
  }

  public static boolean call_isInSyncWithSpec_4157133445514996157(SNode thisNode) {
    if (ListSequence.fromList(SLinkOperations.getTargets(thisNode, "arguments", true)).count() != ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode, "method", false), "args", true)).count()) {
      return false;
    } else {
      for (SNode a : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "arguments", true))) {
        if (SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(a, "type", true)) != SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode, "method", false), "args", true)).getElement(SNodeOperations.getIndexInParent(a)), "type", true))) {
          return false;
        }
      }
      return true;
    }
  }

  public static void call_synchronizeWithSpec_4157133445515001280(SNode thisNode) {
    SLinkOperations.setTarget(thisNode, "type", SNodeOperations.copyNode(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "method", false), "type", true)), true);
    ListSequence.fromList(SLinkOperations.getTargets(thisNode, "arguments", true)).clear();
    for (SNode a : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode, "method", false), "args", true))) {
      ListSequence.fromList(SLinkOperations.getTargets(thisNode, "arguments", true)).addElement(SNodeOperations.copyNode(a));
    }
  }

  public static SNode virtual_getStatementList_8105003328814797304(SNode thisNode) {
    return SLinkOperations.getTarget(thisNode, "body", true);
  }

  public static SNode virtual_getOwningClass_610576951245971853(SNode thisNode) {
    return SNodeOperations.getAncestor(SLinkOperations.getTarget(thisNode, "method", false), "com.mbeddr.cpp.classes.structure.ClassDeclaration", false, false);
  }

  public static int virtual_sortWeight_7999989049973036118(SNode thisNode) {
    return 102000;
  }

  public static String virtual_presentedName_6970149437188808803(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(String.class, BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getOwningClass_610576951245971853", new Object[]{}), "virtual_getFullNamespaceName_2981142171761304257", new Object[]{}) + "::" + SPropertyOperations.getString(SLinkOperations.getTarget(thisNode, "method", false), "name");
  }

  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    return AbstractMethodImplementation_Behavior.call_presentedName_6970149437188808803(thisNode);
  }
}
