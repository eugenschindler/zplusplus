package com.mbeddr.cpp.classes.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import com.mbeddr.cpp.classes.behavior.IClassMember_Behavior;
import jetbrains.mps.textGen.TextGenManager;

public class ConstructorDeclaration_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    if (SPropertyOperations.getBoolean(node, "explicit") && ListSequence.fromList(SLinkOperations.getTargets(node, "args", true)).count() == 1) {
      this.append("explicit ");
    }
    this.append(SPropertyOperations.getString(IClassMember_Behavior.call_owningClass_998890089994484960(node), "name"));
    this.append("(");
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "args", true)).isNotEmpty()) {
      for (SNode item : SLinkOperations.getTargets(node, "args", true)) {
        TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), item, this.getSNode());
        if (item != ListSequence.fromList(SLinkOperations.getTargets(node, "args", true)).last()) {
          this.append(", ");
        }
      }
    }
    this.append(")");
    this.append(";");
    this.appendNewLine();
  }
}
