package com.mbeddr.cpp.classes.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 26:
        return new MethodImplementation_Constraints();
      case 2:
        return new ClassRef_Constraints();
      case 4:
        return new ClassifierType_Constraints();
      case 28:
        return new OoFieldAccess_Constraints();
      case 9:
        return new ConstructorCallExpression_Constraints();
      case 29:
        return new OoMethodCall_Constraints();
      case 10:
        return new ConstructorDeclaration_Constraints();
      case 14:
        return new DestructorDeclaration_Constraints();
      case 25:
        return new MethodDeclaration_Constraints();
      case 11:
        return new ConstructorImplementation_Constraints();
      case 33:
        return new ThisExpression_Constraints();
      case 15:
        return new DestructorImplementation_Constraints();
      case 21:
        return new IClassMember_Constraints();
      case 24:
        return new MethodArgument_Constraints();
      case 1:
        return new ClassDeclaration_Constraints();
      case 32:
        return new TemplateParamType_Constraints();
      case 31:
        return new PrimitiveTemplateParamRef_Constraints();
      case 3:
        return new ClassRefExpr_Constraints();
      case 5:
        return new ConceptRef_Constraints();
      case 22:
        return new ITemplateInstantiator_Constraints();
      case 17:
        return new FieldInitializer_Constraints();
      case 23:
        return new InheritanceDefinition_Constraints();
      case 12:
        return new ConstructorInitializer_Constraints();
      case 19:
        return new FriendFunctionDeclaration_Constraints();
      case 30:
        return new OperatorOverloadingDeclaration_Constraints();
      case 0:
        return new AbstractMethodImplementation_Constraints();
      case 27:
        return new NewArrayExpression_Constraints();
      case 13:
        return new DeleteArrayStatement_Constraints();
      case 8:
        return new ConceptType_Constraints();
      case 6:
        return new ConceptRestrictedTemplateParameter_Constraints();
      case 7:
        return new ConceptRestrictedTemplateParameterType_Constraints();
      case 16:
        return new FieldAccessExpression_Constraints();
      case 20:
        return new ICanBeInTemplateContext_Constraints();
      case 18:
        return new FriendClassDeclaration_Constraints();
      default:
        // todo: illegal in some cases? 
        return new BaseConstraintsDescriptor(fqName);
    }
  }

  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"com.mbeddr.cpp.classes.structure.AbstractMethodImplementation", "com.mbeddr.cpp.classes.structure.ClassDeclaration", "com.mbeddr.cpp.classes.structure.ClassRef", "com.mbeddr.cpp.classes.structure.ClassRefExpr", "com.mbeddr.cpp.classes.structure.ClassifierType", "com.mbeddr.cpp.classes.structure.ConceptRef", "com.mbeddr.cpp.classes.structure.ConceptRestrictedTemplateParameter", "com.mbeddr.cpp.classes.structure.ConceptRestrictedTemplateParameterType", "com.mbeddr.cpp.classes.structure.ConceptType", "com.mbeddr.cpp.classes.structure.ConstructorCallExpression", "com.mbeddr.cpp.classes.structure.ConstructorDeclaration", "com.mbeddr.cpp.classes.structure.ConstructorImplementation", "com.mbeddr.cpp.classes.structure.ConstructorInitializer", "com.mbeddr.cpp.classes.structure.DeleteArrayStatement", "com.mbeddr.cpp.classes.structure.DestructorDeclaration", "com.mbeddr.cpp.classes.structure.DestructorImplementation", "com.mbeddr.cpp.classes.structure.FieldAccessExpression", "com.mbeddr.cpp.classes.structure.FieldInitializer", "com.mbeddr.cpp.classes.structure.FriendClassDeclaration", "com.mbeddr.cpp.classes.structure.FriendFunctionDeclaration", "com.mbeddr.cpp.classes.structure.ICanBeInTemplateContext", "com.mbeddr.cpp.classes.structure.IClassMember", "com.mbeddr.cpp.classes.structure.ITemplateInstantiator", "com.mbeddr.cpp.classes.structure.InheritanceDefinition", "com.mbeddr.cpp.classes.structure.MethodArgument", "com.mbeddr.cpp.classes.structure.MethodDeclaration", "com.mbeddr.cpp.classes.structure.MethodImplementation", "com.mbeddr.cpp.classes.structure.NewArrayExpression", "com.mbeddr.cpp.classes.structure.OoFieldAccess", "com.mbeddr.cpp.classes.structure.OoMethodCall", "com.mbeddr.cpp.classes.structure.OperatorOverloadingDeclaration", "com.mbeddr.cpp.classes.structure.PrimitiveTemplateParamRef", "com.mbeddr.cpp.classes.structure.TemplateParamType", "com.mbeddr.cpp.classes.structure.ThisExpression"};
}
