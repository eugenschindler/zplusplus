package com.mbeddr.cpp.classes.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;

public class CppNamingConventions_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_kqm6ve_a(editorContext, node);
  }

  private EditorCell createCollection_kqm6ve_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_kqm6ve_a0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_kqm6ve_b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_kqm6ve_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "C++ Naming Conventions");
    editorCell.setCellId("Constant_kqm6ve_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_b0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_b0");
    editorCell.addEditorCell(this.createCollection_kqm6ve_a1a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_a1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_a1a");
    editorCell.addEditorCell(this.createCollection_kqm6ve_a0b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_a0b0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_a0b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createCollection_kqm6ve_a0a1a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_kqm6ve_b0a1a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_kqm6ve_c0a1a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_kqm6ve_d0a1a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_a0a1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_a0a1a");
    editorCell.addEditorCell(this.createConstant_kqm6ve_a0a0b0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_kqm6ve_b0a0b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_kqm6ve_a0a0b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Member prefix: ");
    editorCell.setCellId("Constant_kqm6ve_a0a0b0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_kqm6ve_b0a0b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("MemberPrefix");
    provider.setNoTargetText("<no MemberPrefix>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_MemberPrefix");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_b0a1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_b0a1a");
    editorCell.addEditorCell(this.createConstant_kqm6ve_a1a0b0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_kqm6ve_b1a0b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_kqm6ve_a1a0b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Getter prefix: ");
    editorCell.setCellId("Constant_kqm6ve_a1a0b0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_kqm6ve_b1a0b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("GetPrefix");
    provider.setNoTargetText("<no GetPrefix>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_GetPrefix");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_c0a1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_c0a1a");
    editorCell.addEditorCell(this.createConstant_kqm6ve_a2a0b0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_kqm6ve_b2a0b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_kqm6ve_a2a0b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Setter prefix: ");
    editorCell.setCellId("Constant_kqm6ve_a2a0b0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_kqm6ve_b2a0b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("SetPrefix");
    provider.setNoTargetText("<no SetPrefix>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_SetPrefix");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createCollection_kqm6ve_d0a1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_kqm6ve_d0a1a");
    editorCell.addEditorCell(this.createConstant_kqm6ve_a3a0b0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_kqm6ve_b3a0b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_kqm6ve_a3a0b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Setter argument prefix: ");
    editorCell.setCellId("Constant_kqm6ve_a3a0b0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_kqm6ve_b3a0b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("SetterArgPrefix");
    provider.setNoTargetText("<no SetterArgPrefix>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_SetterArgPrefix");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
}
