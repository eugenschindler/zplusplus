package com.mbeddr.cpp.classes.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ILeftCombinator;

public class Template_Behavior {
  public static void init(SNode thisNode) {
    ListSequence.fromList(SLinkOperations.getTargets(thisNode, "parameters", true)).addElement(new _FunctionTypes._return_P0_E0<SNode>() {
      public SNode invoke() {
        SNode node_8675670401742631802 = new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            SNode res = SConceptOperations.createNewNode("com.mbeddr.cpp.classes.structure.TemplateParameter", null);
            SPropertyOperations.set(res, "name", ("T"));
            return res;
          }
        }.invoke();
        return node_8675670401742631802;
      }
    }.invoke());
  }

  public static String call_signatureForImplementers_1022708226503069844(SNode thisNode) {
    return "<" + ListSequence.fromList(SLinkOperations.getTargets(thisNode, "parameters", true)).tailListSequence(1).foldLeft(SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "parameters", true)).first(), "name"), new ILeftCombinator<SNode, String>() {
      public String combine(String s, SNode it) {
        return s + ", " + SPropertyOperations.getString(it, "name");
      }
    }) + ">";
  }
}
