package com.mbeddr.cpp.cext.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.util.NameUtil;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class NamespaceScopeExpr_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> virtual_visibleContentsOfType_7139820346881179813(SNode thisNode, final SNode targetConcept) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "left", true), "com.mbeddr.cpp.cext.structure.NamespaceRefExpr")) {
      return Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "left", true), "com.mbeddr.cpp.cext.structure.NamespaceRefExpr"), "nsprovider", false), "virtual_getAllContents_4315577761883431846", new Object[]{})).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.isInstanceOf(it, NameUtil.nodeFQName(targetConcept));
        }
      });
    }
    System.err.println("nix");
    return new ArrayList<SNode>();
  }

  public static boolean virtual_isLValue_7254843406768839725(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(thisNode, "right", true), "virtual_isLValue_7254843406768839725", new Object[]{});
  }

  public static boolean virtual_isStaticallyEvaluatable_3788988821852141811(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(thisNode, "right", true), "virtual_isStaticallyEvaluatable_3788988821852141811", new Object[]{});
  }

  public static Object virtual_evaluateStatically_7863679314024402271(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Object.class, SLinkOperations.getTarget(thisNode, "right", true), "virtual_evaluateStatically_7863679314024402271", new Object[]{});
  }

  public static SNode call_asType_2533033302498830784(SNode thisNode) {
    SNode t = SConceptOperations.createNewNode("com.mbeddr.cpp.cext.structure.NamespaceScopeType", null);
    SLinkOperations.setTarget(t, "outer", NamespaceRefExpr_Behavior.call_asNamespaceType_8418506114731132641(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "left", true), "com.mbeddr.cpp.cext.structure.NamespaceRefExpr")), true);
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "right", true), "com.mbeddr.cpp.cext.structure.NamespaceScopeExpr")) {
      SLinkOperations.setTarget(t, "inner", NamespaceScopeExpr_Behavior.call_asType_2533033302498830784(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "right", true), "com.mbeddr.cpp.cext.structure.NamespaceScopeExpr")), true);
    } else {
      SLinkOperations.setTarget(t, "inner", NamespaceRefExpr_Behavior.call_asClassType_2533033302498840653(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "right", true), "com.mbeddr.cpp.cext.structure.NamespaceRefExpr")), true);
    }
    return t;
  }

  public static int virtual_getPriolevel_6584628407655574558(SAbstractConcept thisConcept) {
    return 10000;
  }
}
